/*!
 * \file ds3231.h
 * \brief Clocks
 *
 * The main file that should be included in a project to use Clocks.
 * Includes all the device's functionality and provides macros to create the
 * device and interact with it.
 *
 * Software License Agreement:
 * 
 * This code is generated by the Embedd platform and is free to use, distribute, 
 * and modify by anyone, provided that a reference to the Embedd platform is 
 * included in any distributed or derivative works.
 * 
 * The code is provided "as is" without warranty of any kind, either expressed or 
 * implied, including but not limited to the implied warranties of merchantability 
 * and fitness for a particular purpose.
 * 
 * By using this code, you agree to acknowledge the Embedd platform in your 
 * projects or documentation where this code is utilized.
 * 
 * Â© 2024 Embedd Limited. All Rights Reserved.
 */

#ifndef _SRC_DS3231_H
#define _SRC_DS3231_H

#include "embedd_device.h"
#include "embedd_utils.h"
#include "embedd_i2c.h"
#include "embedd_event.h"
#include "ds3231_data_types.h"
#include "ds3231_events.h"
#include "ds3231_registers.h"

/*!
 * \var ds3231_api
 * \brief The device's API structure containing pointers to all device's API functions
 */
extern const ds3231_api_t ds3231_api;



/*!
 * \macro DS3231_WRITE_REG
 * \brief Write register macro.
 * 
 * \param dev Device object.
 * \param _typename Typename for register.
 * \param var Variable for writing data.
 */
#define DS3231_WRITE_REG(dev, _typename, var) \
  ((ds3231_api_t*)(dev).api)->ds3231_write_reg(&(dev), \
  _typename##_write_reg_addr, &(var), \
  sizeof(_typename), _typename##_delay)

/*!
 * \macro DS3231_READ_REG
 * \brief Read register macro.
 * 
 * \param dev Device object.
 * \param _typename Typename for register.
 * \param var Variable for read data.
 */
#define DS3231_READ_REG(dev, _typename, var) \
  ((ds3231_api_t*)(dev).api)->ds3231_read_reg(&(dev), \
  _typename##_read_reg_addr, &(var), \
  sizeof(_typename), _typename##_delay)

/*!
* \macro DS3231_I2C_DEVICE_DEFINE
* \brief Macro to create the device's objects
*
* \param var name of device object's variable
* \param _name_of_device string name of the device (for debug purpose)
*/
#define DS3231_I2C_DEVICE_DEFINE(var, _name_of_device)\
  static ds3231_data_t var##_data;\
  static embedd_i2c_dev_cfg_t var##_i2c_cfg;\
  static embedd_dev_cfg_t var##_cfg = {\
    .bus_cfg = { .bus_type = EMBEDD_BUS_TYPE_I2C, .configs = (void*)&var##_i2c_cfg },\
  };\
  EMBEDD_DEVICE_DEFINE_FULL(var, _name_of_device, &var##_cfg, &ds3231_api, NULL, &var##_data, NULL, NULL)

#endif//_SRC_DS3231_H
